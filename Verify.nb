(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[     82585,       1870]
NotebookOptionsPosition[     81548,       1840]
NotebookOutlinePosition[     81919,       1856]
CellTagsIndexPosition[     81876,       1853]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Verify and Plot", "Section",
 CellChangeTimes->{{3.884494599062242*^9, 3.884494603297215*^9}, {
   3.906672095887267*^9, 3.906672102525889*^9}, 
   3.91523970534833*^9},ExpressionUUID->"4b336cb7-3538-4769-b1b1-\
618427d80119"],

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"getRegionSAS", "[", "sas_", "]"}], ":=", 
   RowBox[{"And", "@@", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"GreaterEqual", "[", 
        RowBox[{"#", ",", "0"}], "]"}], "&"}], "/@", "sas"}], ")"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"verifyResults", "[", 
    RowBox[{
    "benchmark_", ",", "plot_", ",", "plotRange_", ",", "verifyTimeLimit_"}], 
    "]"}], ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "systemPath", ",", "xvarSet", ",", "yvarSet", ",", "zvarSet", ",", "s1",
        ",", "s2", ",", "hPath", ",", "hData", ",", "h", ",", "hHomo", ",", 
       "sdpTime", ",", "verifyTime", ",", "totalTime", ",", "result", ",", 
       "flag", ",", "flagHomo", ",", "flagNP", ",", "hNP", ",", "i"}], "}"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"systemPath", "=", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
         "\"\<.\>\"", ",", "\"\<Results\>\"", ",", "\"\<problem\>\"", ",", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"benchmark", ",", "\"\<.txt\>\""}], "]"}]}], "}"}], 
        "]"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
        "xvarSet", ",", "yvarSet", ",", "zvarSet", ",", "s1", ",", "s2"}], 
        "}"}], " ", "=", " ", 
       RowBox[{"ReadList", "[", "systemPath", "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"flag", " ", "=", "1"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"hPath", "=", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
         "\"\<.\>\"", ",", "\"\<Results\>\"", ",", "\"\<sufficient\>\"", ",", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"benchmark", ",", "\"\<.txt\>\""}], "]"}]}], "}"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FileExistsQ", "[", "hPath", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"hData", "=", 
          RowBox[{"ReadList", "[", 
           RowBox[{"hPath", ",", 
            RowBox[{"{", 
             RowBox[{"Expression", ",", "Expression"}], "}"}], ",", 
            RowBox[{"RecordSeparators", "\[Rule]", " ", "\"\<\\n\>\""}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
         "Print", "[", 
          "\"\<===== Verifying polynomial interpolants (CAV20 method) =====\>\
\"", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"h", " ", "=", " ", 
          RowBox[{
           RowBox[{"hData", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"sdpTime", " ", "=", " ", 
          RowBox[{
           RowBox[{"hData", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"result", "=", 
          RowBox[{"Timing", "[", 
           RowBox[{"TimeConstrained", "[", 
            RowBox[{
             RowBox[{"myVerify", "[", 
              RowBox[{
              "xvarSet", ",", " ", "yvarSet", ",", " ", "zvarSet", ",", " ", 
               "s1", ",", "s2", ",", "h"}], "]"}], ",", "verifyTimeLimit", 
             ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"verifyTime", "=", 
          RowBox[{"result", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"totalTime", " ", "=", " ", 
          RowBox[{"sdpTime", "+", "verifyTime"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"result", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", " ", "0"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", "\"\<Numerical Errors Detected.\>\"", "]"}],
             ";", "\[IndentingNewLine]", 
            RowBox[{"flag", "=", "0"}], ";"}]}], "\[IndentingNewLine]", "]"}],
          ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"result", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", " ", "1"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", "\"\<Valid solution.\>\"", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"result", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", " ", "2"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", "\"\<Verify out of time.\>\"", "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<SDP Time: \>\"", ",", "sdpTime"}], " ", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<verify Time: \>\"", ",", "verifyTime"}], " ", "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Total Time: \>\"", ",", "totalTime"}], " ", "]"}], 
         ";"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"flag", "=", "0"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"hPath", "=", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
         "\"\<.\>\"", ",", "\"\<Results\>\"", ",", "\"\<homo\>\"", ",", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"benchmark", ",", "\"\<.txt\>\""}], "]"}]}], "}"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FileExistsQ", "[", "hPath", "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "Print", "[", 
          "\"\<===== Verifying polynomial interpolants (our method) \
=====\>\"", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"hData", "=", 
          RowBox[{"ReadList", "[", 
           RowBox[{"hPath", ",", 
            RowBox[{"{", 
             RowBox[{"Expression", ",", "Expression"}], "}"}], ",", 
            RowBox[{"RecordSeparators", "\[Rule]", " ", "\"\<\\n\>\""}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"flagHomo", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"hHomo", " ", "=", " ", 
          RowBox[{
           RowBox[{"hData", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"sdpTime", " ", "=", " ", 
          RowBox[{
           RowBox[{"hData", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"result", "=", 
          RowBox[{"Timing", "[", 
           RowBox[{"TimeConstrained", "[", 
            RowBox[{
             RowBox[{"myVerifyHomo", "[", 
              RowBox[{
              "xvarSet", ",", " ", "yvarSet", ",", " ", "zvarSet", ",", " ", 
               "s1", ",", "s2", ",", "hHomo"}], "]"}], ",", "verifyTimeLimit",
              ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"verifyTime", "=", 
          RowBox[{"result", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"totalTime", " ", "=", " ", 
          RowBox[{"sdpTime", "+", "verifyTime"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"result", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", " ", "0"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", "\"\<Numerical Errors Detected.\>\"", "]"}],
             ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"result", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", " ", "1"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", "\"\<Valid solution.\>\"", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"result", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", " ", "2"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", "\"\<Verify out of time.\>\"", "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<SDP Time: \>\"", ",", "sdpTime"}], " ", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<verify Time: \>\"", ",", "verifyTime"}], " ", "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Total Time: \>\"", ",", "totalTime"}], " ", "]"}], 
         ";"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"flagHomo", "=", "1"}], ";"}]}], "\[IndentingNewLine]", 
       "]"}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"hPath", "=", 
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
         "\"\<.\>\"", ",", "\"\<Results\>\"", ",", "\"\<nonpoly\>\"", ",", 
          RowBox[{"StringJoin", "[", 
           RowBox[{"benchmark", ",", "\"\<.txt\>\""}], "]"}]}], "}"}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"FileExistsQ", "[", "hPath", "]"}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
         "Print", "[", 
          "\"\<===== Verifying semialgebraic interpolants (our method) \
=====\>\"", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"hData", "=", 
          RowBox[{"ReadList", "[", 
           RowBox[{"hPath", ",", 
            RowBox[{"{", 
             RowBox[{"Expression", ",", "Expression"}], "}"}], ",", 
            RowBox[{"RecordSeparators", "\[Rule]", " ", "\"\<\\n\>\""}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"flagNP", "=", "1"}], ";", "\[IndentingNewLine]", 
         RowBox[{"hNP", " ", "=", " ", 
          RowBox[{
           RowBox[{"hData", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"sdpTime", " ", "=", " ", 
          RowBox[{
           RowBox[{"hData", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"result", "=", 
          RowBox[{"Timing", "[", 
           RowBox[{"TimeConstrained", "[", 
            RowBox[{
             RowBox[{"myVerifySemi", "[", 
              RowBox[{
              "xvarSet", ",", " ", "yvarSet", ",", " ", "zvarSet", ",", " ", 
               "s1", ",", "s2", ",", "hNP"}], "]"}], ",", "verifyTimeLimit", 
             ",", "2"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"verifyTime", "=", 
          RowBox[{"result", "[", 
           RowBox[{"[", "1", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"totalTime", " ", "=", " ", 
          RowBox[{"sdpTime", "+", "verifyTime"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"result", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", " ", "0"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", "\"\<Numerical Errors Detected.\>\"", "]"}],
             ";", "\[IndentingNewLine]", 
            RowBox[{"flagNP", "=", "0"}]}]}], "\[IndentingNewLine]", "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"result", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", " ", "1"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", "\"\<Valid solution.\>\"", "]"}], ";"}]}], 
          "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"result", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", " ", "2"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Print", "[", "\"\<Verify out of time.\>\"", "]"}], 
            ";"}]}], "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<SDP Time: \>\"", ",", "sdpTime"}], " ", "]"}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<verify Time: \>\"", ",", "verifyTime"}], " ", "]"}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", 
          RowBox[{"\"\<Total Time: \>\"", ",", "totalTime"}], " ", "]"}], 
         ";"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"flagNP", "=", "0"}], ";"}]}], "\[IndentingNewLine]", "]"}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"If", "[", " ", 
       RowBox[{
        RowBox[{"plot", "\[Equal]", " ", "1"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "xvarSet", "]"}], "\[Equal]", " ", "2"}], 
           ",", 
           RowBox[{"myPlot2D", "[", 
            RowBox[{
            "benchmark", ",", "xvarSet", ",", "yvarSet", ",", "zvarSet", ",", 
             "plotRange", ",", "s1", ",", "s2", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"flag", "\[Equal]", " ", "0"}], ",", 
               RowBox[{"-", "1"}], ",", "h"}], "]"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"flagHomo", "\[Equal]", " ", "0"}], ",", 
               RowBox[{"-", "1"}], ",", "hHomo"}], "]"}], ",", " ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"flagNP", "\[Equal]", " ", "0"}], ",", 
               RowBox[{"-", "1"}], ",", "hNP"}], "]"}]}], "]"}]}], "]"}], ";",
          "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "xvarSet", "]"}], "\[Equal]", " ", "3"}], 
           ",", 
           RowBox[{"myPlot3D", "[", 
            RowBox[{
            "benchmark", ",", "xvarSet", ",", "yvarSet", ",", "zvarSet", ",", 
             "plotRange", ",", "s1", ",", "s2", ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"flag", "\[Equal]", " ", "0"}], ",", 
               RowBox[{"-", "1"}], ",", "h"}], "]"}], ",", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"flagHomo", "\[Equal]", " ", "0"}], ",", 
               RowBox[{"-", "1"}], ",", "hHomo"}], "]"}], ",", " ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"flagNP", "\[Equal]", " ", "0"}], ",", 
               RowBox[{"-", "1"}], ",", "hNP"}], "]"}]}], "]"}]}], "]"}], 
         ";"}]}], "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myVerify", " ", "[", 
   RowBox[{
   "xvarSet_", ",", "yvarSet_", ",", "zvarSet_", ",", "s1_", ",", "s2_", ",", 
    "h_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "lambda", ",", "s1Cons", ",", "s2Cons", ",", "bcLie", ",", "cond1", ",", 
      "cond2", ",", "timev"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"timev", "=", "Now"}], ";", "\[IndentingNewLine]", 
     RowBox[{"s1Cons", " ", "=", " ", 
      RowBox[{"Or", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"getRegionSAS", "[", "#", "]"}], "&"}], "/@", "s1"}], 
        ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"s2Cons", " ", "=", " ", 
      RowBox[{"Or", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"getRegionSAS", "[", "#", "]"}], "&"}], "/@", "s2"}], 
        ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cond1", " ", "=", " ", 
      RowBox[{"FindInstance", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"h", "-", "1"}], "<", " ", "0"}], "&&", "s1Cons"}], ",", 
        RowBox[{"Join", "[", 
         RowBox[{"xvarSet", ",", "yvarSet"}], "]"}], ",", "Reals"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"cond2", " ", "=", 
      RowBox[{"FindInstance", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "h"}], "-", "1"}], "<", "0"}], "&&", "s2Cons"}], ",", 
        RowBox[{"Join", "[", 
         RowBox[{"xvarSet", ",", "zvarSet"}], "]"}], ",", "Reals"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "cond1", "]"}], "+", 
         RowBox[{"Length", "[", "cond2", "]"}]}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"no", " ", "counter"}], "-", 
         RowBox[{"example", " ", "is", " ", "found"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "1", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "0", "]"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myVerifyHomo", " ", "[", 
   RowBox[{
   "xvarSet_", ",", "yvarSet_", ",", "zvarSet_", ",", "s1_", ",", "s2_", ",", 
    "hHomo_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "lambda", ",", "s1Cons", ",", "s2Cons", ",", "bcLie", ",", "cond1", ",", 
      "cond2", ",", "timev"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"timev", "=", "Now"}], ";", "\[IndentingNewLine]", 
     RowBox[{"s1Cons", " ", "=", " ", 
      RowBox[{"Or", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"getRegionSAS", "[", "#", "]"}], "&"}], "/@", "s1"}], 
        ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"s2Cons", " ", "=", " ", 
      RowBox[{"Or", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"getRegionSAS", "[", "#", "]"}], "&"}], "/@", "s2"}], 
        ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cond1", " ", "=", " ", 
      RowBox[{"FindInstance", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"hHomo", "\[LessEqual]", "  ", "0"}], "&&", "s1Cons"}], ",", 
        RowBox[{"Join", "[", 
         RowBox[{"xvarSet", ",", "yvarSet"}], "]"}], ",", "Reals"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"cond2", " ", "=", 
      RowBox[{"FindInstance", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "hHomo"}], "\[LessEqual]", "  ", "0"}], "&&", 
         "s2Cons"}], ",", 
        RowBox[{"Join", "[", 
         RowBox[{"xvarSet", ",", "zvarSet"}], "]"}], ",", "Reals"}], "]"}]}], 
     ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "cond1", "]"}], "+", 
         RowBox[{"Length", "[", "cond2", "]"}]}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"no", " ", "counter"}], "-", 
         RowBox[{"example", " ", "is", " ", "found"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "1", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "0", "]"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myVerifySemi", " ", "[", 
   RowBox[{
   "xvarSet_", ",", "yvarSet_", ",", "zvarSet_", ",", "s1_", ",", "s2_", ",", 
    "hHomo_"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "lambda", ",", "s1Cons", ",", "s2Cons", ",", "bcLie", ",", "cond1", ",", 
      "cond2", ",", "timev"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"timev", "=", "Now"}], ";", "\[IndentingNewLine]", 
     RowBox[{"s1Cons", " ", "=", " ", 
      RowBox[{"Or", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"getRegionSAS", "[", "#", "]"}], "&"}], "/@", "s1"}], 
        ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"s2Cons", " ", "=", " ", 
      RowBox[{"Or", "@@", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"getRegionSAS", "[", "#", "]"}], "&"}], "/@", "s2"}], 
        ")"}]}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"cond1", " ", "=", " ", 
      RowBox[{"FindInstance", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"hHomo", "\[LessEqual]", "  ", "0"}], "&&", "s1Cons", "&&", 
         RowBox[{"w", ">=", " ", "0"}], "&&", 
         RowBox[{
          RowBox[{"w", "^", "2"}], "==", " ", 
          RowBox[{"Total", "[", 
           RowBox[{"xvarSet", "^", "2"}], "]"}]}]}], ",", 
        RowBox[{"Join", "[", 
         RowBox[{"xvarSet", ",", "yvarSet", ",", 
          RowBox[{"{", "w", "}"}]}], "]"}], ",", "Reals"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"cond2", " ", "=", 
      RowBox[{"FindInstance", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"-", "hHomo"}], "\[LessEqual]", "  ", "0"}], "&&", "s2Cons",
          "&&", 
         RowBox[{"w", ">=", " ", "0"}], "&&", 
         RowBox[{
          RowBox[{"w", "^", "2"}], "==", " ", 
          RowBox[{"Total", "[", 
           RowBox[{"xvarSet", "^", "2"}], "]"}]}]}], ",", 
        RowBox[{"Join", "[", 
         RowBox[{"xvarSet", ",", "zvarSet", ",", 
          RowBox[{"{", "w", "}"}]}], "]"}], ",", "Reals"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"Length", "[", "cond1", "]"}], "+", 
         RowBox[{"Length", "[", "cond2", "]"}]}], "\[Equal]", "0"}], ",", " ", 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"no", " ", "counter"}], "-", 
         RowBox[{"example", " ", "is", " ", "found"}]}], "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "1", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "0", "]"}]}], "]"}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"myPlot2D", " ", "[", 
    RowBox[{
    "benchmark_", ",", "xvarSet_", ",", "yvarSet_", ",", "zvarSet_", ",", 
     "xvarRange_", ",", "s1_", ",", "s2_", ",", "h_", ",", "hHomo_", ",", 
     "hNP_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ranges", ",", "s1Cons", ",", "s2Cons", ",", "s1Plot", ",", "s2Plot", 
       ",", "hPlot", ",", "hHomoPlot", ",", "hNPPlot"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Print", "[", "\"\<Plot2d...\>\"", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ranges", "=", 
       RowBox[{"Sequence", " ", "@@", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Prepend", ",", 
          RowBox[{"{", 
           RowBox[{"xvarRange", ",", "xvarSet"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s1Cons", " ", "=", " ", 
       RowBox[{"Or", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"getRegionSAS", "[", "#", "]"}], "&"}], "/@", "s1"}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"s2Cons", " ", "=", " ", 
       RowBox[{"Or", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"getRegionSAS", "[", "#", "]"}], "&"}], "/@", "s2"}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"s1Plot", "=", 
       RowBox[{"RegionPlot", "[", 
        RowBox[{
         RowBox[{"Resolve", "[", 
          RowBox[{
           RowBox[{"Exists", "[", 
            RowBox[{"yvarSet", ",", "s1Cons"}], "]"}], ",", "Reals"}], "]"}], 
         ",", 
         RowBox[{"Evaluate", "[", "ranges", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Opacity", "[", "0.65", "]"}], ",", 
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                  RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.18684294025131137`, 0.4766666666666667, 0.2861392881649977],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.28026441037696703`", ",", "0.715`", ",", 
                    "0.4292089322474965`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
             Editable->False,
             Selectable->False]}], "}"}]}], ",", 
         RowBox[{"BoundaryStyle", "\[Rule]", "None"}], " ", ",", 
         RowBox[{"PlotPoints", "\[Rule]", " ", "100"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s2Plot", "=", 
       RowBox[{"RegionPlot", "[", 
        RowBox[{
         RowBox[{"Resolve", "[", 
          RowBox[{
           RowBox[{"Exists", "[", 
            RowBox[{"zvarSet", ",", "s2Cons"}], "]"}], ",", "Reals"}], "]"}], 
         ",", 
         RowBox[{"Evaluate", "[", "ranges", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Opacity", "[", "0.65", "]"}], ",", 
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0.915, 0.3325, 0.2125], 
                  RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.6100000000000001, 0.22166666666666668`, 
                  0.14166666666666666`],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}], 
                NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0.915, 0.3325, 0.2125]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0.915, 0.3325, 0.2125],
             Editable->False,
             Selectable->False]}], "}"}]}], ",", 
         RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
         RowBox[{"PlotPoints", "\[Rule]", " ", "100"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"hPlot", "=", 
       RowBox[{"RegionPlot", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"h", "-", "1"}], "\[GreaterEqual]", "  ", "0"}], ",", 
         RowBox[{"Evaluate", "[", "ranges", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Opacity", "[", "0.15", "]"}], ",", 
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[1, 0.75, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                FrameStyle->RGBColor[0.6666666666666666, 0.5, 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[1, 0.75, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[1, 0.75, 0],
             Editable->False,
             Selectable->False]}], "}"}]}], ",", 
         RowBox[{"BoundaryStyle", "\[Rule]", " ", 
          RowBox[{"{", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.75, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->RGBColor[0.6666666666666666, 0.5, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
               False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.75, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.75, 0],
            Editable->False,
            Selectable->False], "}"}]}], ",", 
         RowBox[{"PlotPoints", "\[Rule]", " ", "100"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"hHomoPlot", "=", 
       RowBox[{"RegionPlot", "[", 
        RowBox[{
         RowBox[{"hHomo", "\[GreaterEqual]", " ", "0"}], ",", 
         RowBox[{"Evaluate", "[", "ranges", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Opacity", "[", "0.15", "]"}], ",", 
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0.363898, 0.618501, 0.782349], 
                  RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                FrameStyle->RGBColor[0.24259866666666668`, 0.412334, 0.521566],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}], 
                  "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0.363898, 0.618501, 0.782349]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0.363898, 0.618501, 0.782349],
             Editable->False,
             Selectable->False]}], "}"}]}], ",", 
         RowBox[{"BoundaryStyle", "\[Rule]", 
          RowBox[{"{", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.363898, 0.618501, 0.782349], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->RGBColor[0.24259866666666668`, 0.412334, 0.521566],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}], 
                 "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.363898, 0.618501, 0.782349]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.363898, 0.618501, 0.782349],
            Editable->False,
            Selectable->False], "}"}]}], ",", 
         RowBox[{"PlotPoints", "\[Rule]", " ", "100"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"hNPPlot", "=", 
       RowBox[{"RegionPlot", "[", " ", 
        RowBox[{
         RowBox[{
          RowBox[{"ReplaceAll", "[", 
           RowBox[{"hNP", ",", 
            RowBox[{"w", "->", " ", 
             RowBox[{"Sqrt", "[", 
              RowBox[{"Total", "[", 
               RowBox[{"xvarSet", "^", "2"}], "]"}], "]"}]}]}], "]"}], 
          "\[GreaterEqual]", " ", "0"}], ",", 
         RowBox[{"Evaluate", "[", "ranges", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Opacity", "[", "0.15", "]"}], ",", 
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0.363898, 0.618501, 0.782349], 
                  RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                FrameStyle->RGBColor[0.24259866666666668`, 0.412334, 0.521566],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}], 
                  "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0.363898, 0.618501, 0.782349]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0.363898, 0.618501, 0.782349],
             Editable->False,
             Selectable->False]}], "}"}]}], ",", 
         RowBox[{"BoundaryStyle", "\[Rule]", " ", 
          RowBox[{"{", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.363898, 0.618501, 0.782349], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->RGBColor[0.24259866666666668`, 0.412334, 0.521566],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}], 
                 "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.363898, 0.618501, 0.782349]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.363898, 0.618501, 0.782349],
            Editable->False,
            Selectable->False], "}"}]}], ",", 
         RowBox[{"PlotPoints", "\[Rule]", " ", "100"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"FileNameJoin", "[", 
         RowBox[{"{", 
          RowBox[{
          "\"\<.\>\"", ",", "\"\<Results\>\"", ",", "\"\<plots\>\"", ",", 
           RowBox[{"StringJoin", "[", 
            RowBox[{"benchmark", ",", "\"\<.pdf\>\""}], "]"}]}], "}"}], "]"}],
         ",", 
        RowBox[{"Show", "[", 
         RowBox[{
         "s1Plot", ",", "s2Plot", ",", "hPlot", ",", "hHomoPlot", ",", " ", 
          "hNPPlot", ",", " ", 
          RowBox[{"FrameLabel", "\[Rule]", "xvarSet"}]}], "]"}]}], "]"}], 
      ";"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"myPlot3D", " ", "[", 
    RowBox[{
    "benchmark_", ",", "xvarSet_", ",", "yvarSet_", ",", "zvarSet_", ",", 
     "xvarRange_", ",", "s1_", ",", "s2_", ",", "h_", ",", "hHomo_", ",", " ",
      "hNP_"}], "]"}], ":=", " ", 
   RowBox[{"Module", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "ranges", ",", "s1Cons", ",", "s2Cons", ",", "s1Plot", ",", "s2Plot", 
       ",", "hPlot", ",", "hHomoPlot"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{"inefficient", ",", " ", 
       RowBox[{"try", " ", "other", " ", "tools"}]}], "*)"}], 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Print", "[", "\"\<Plot3D...\>\"", "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ranges", "=", 
       RowBox[{"Sequence", " ", "@@", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Prepend", ",", 
          RowBox[{"{", 
           RowBox[{"xvarRange", ",", "xvarSet"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"ranges", "=", 
       RowBox[{"Sequence", " ", "@@", " ", 
        RowBox[{"MapThread", "[", 
         RowBox[{"Prepend", ",", 
          RowBox[{"{", 
           RowBox[{"xvarRange", ",", "xvarSet"}], "}"}]}], "]"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s1Cons", " ", "=", " ", 
       RowBox[{"Or", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"getRegionSAS", "[", "#", "]"}], "&"}], "/@", "s1"}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"s2Cons", " ", "=", " ", 
       RowBox[{"Or", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"getRegionSAS", "[", "#", "]"}], "&"}], "/@", "s2"}], 
         ")"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"s1Plot", "=", 
       RowBox[{"RegionPlot3D", "[", 
        RowBox[{
         RowBox[{"Resolve", "[", 
          RowBox[{
           RowBox[{"Exists", "[", 
            RowBox[{"yvarSet", ",", "s1Cons"}], "]"}], ",", "Reals"}], "]"}], 
         ",", 
         RowBox[{"Evaluate", "[", "ranges", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Opacity", "[", "0.65", "]"}], ",", 
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
                  RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.18684294025131137`, 0.4766666666666667, 0.2861392881649977],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  
                  RowBox[{
                   "0.28026441037696703`", ",", "0.715`", ",", 
                    "0.4292089322474965`"}], "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965],
             Editable->False,
             Selectable->False]}], "}"}]}], ",", 
         RowBox[{"BoundaryStyle", "\[Rule]", "None"}], " ", ",", 
         RowBox[{"PlotPoints", "\[Rule]", " ", "100"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"s2Plot", "=", 
       RowBox[{"RegionPlot3D", "[", 
        RowBox[{
         RowBox[{"Resolve", "[", 
          RowBox[{
           RowBox[{"Exists", "[", 
            RowBox[{"zvarSet", ",", "s2Cons"}], "]"}], ",", "Reals"}], "]"}], 
         ",", 
         RowBox[{"Evaluate", "[", "ranges", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Opacity", "[", "0.65", "]"}], ",", 
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0.915, 0.3325, 0.2125], 
                  RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                
                FrameStyle->RGBColor[
                 0.6100000000000001, 0.22166666666666668`, 
                  0.14166666666666666`],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  RowBox[{"0.915`", ",", "0.3325`", ",", "0.2125`"}], "]"}], 
                NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0.915, 0.3325, 0.2125]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0.915, 0.3325, 0.2125],
             Editable->False,
             Selectable->False]}], "}"}]}], ",", 
         RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", 
         RowBox[{"PlotPoints", "\[Rule]", " ", "100"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"hPlot", "=", 
       RowBox[{"RegionPlot3D", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"h", "-", "1"}], "\[GreaterEqual]", "  ", "0"}], ",", 
         RowBox[{"Evaluate", "[", "ranges", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Opacity", "[", "0.15", "]"}], ",", 
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[1, 0.75, 0], RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                FrameStyle->RGBColor[0.6666666666666666, 0.5, 0.],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
                False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[1, 0.75, 0]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[1, 0.75, 0],
             Editable->False,
             Selectable->False]}], "}"}]}], ",", 
         RowBox[{"BoundaryStyle", "\[Rule]", " ", 
          RowBox[{"{", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[1, 0.75, 0], RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->RGBColor[0.6666666666666666, 0.5, 0.],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"1", ",", "0.75`", ",", "0"}], "]"}], NumberMarks -> 
               False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[1, 0.75, 0]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[1, 0.75, 0],
            Editable->False,
            Selectable->False], "}"}]}], ",", 
         RowBox[{"PlotPoints", "\[Rule]", " ", "100"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"hHomoPlot", "=", 
       RowBox[{"RegionPlot3D", "[", 
        RowBox[{
         RowBox[{"hHomo", "\[GreaterEqual]", " ", "0"}], ",", 
         RowBox[{"Evaluate", "[", "ranges", "]"}], ",", 
         RowBox[{"PlotStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Opacity", "[", "0.15", "]"}], ",", 
            InterpretationBox[
             ButtonBox[
              TooltipBox[
               GraphicsBox[{
                 {GrayLevel[0], RectangleBox[{0, 0}]}, 
                 {GrayLevel[0], RectangleBox[{1, -1}]}, 
                 {RGBColor[0.363898, 0.618501, 0.782349], 
                  RectangleBox[{0, -1}, {2, 1}]}},
                AspectRatio->1,
                DefaultBaseStyle->"ColorSwatchGraphics",
                Frame->True,
                FrameStyle->RGBColor[0.24259866666666668`, 0.412334, 0.521566],
                FrameTicks->None,
                
                ImageSize->
                 Dynamic[{
                  Automatic, 
                   1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}],
                PlotRangePadding->None],
               StyleBox[
                RowBox[{"RGBColor", "[", 
                  RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}], 
                  "]"}], NumberMarks -> False]],
              Appearance->None,
              BaseStyle->{},
              BaselinePosition->Baseline,
              ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
                If[
                 Not[
                  AbsoluteCurrentValue["Deployed"]], 
                 SelectionMove[Typeset`box$, All, Expression]; 
                 FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                 FrontEnd`Private`$ColorSelectorInitialColor = 
                  RGBColor[0.363898, 0.618501, 0.782349]; 
                 FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                 MathLink`CallFrontEnd[
                   FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
              DefaultBaseStyle->{},
              Evaluator->Automatic,
              Method->"Preemptive"],
             RGBColor[0.363898, 0.618501, 0.782349],
             Editable->False,
             Selectable->False]}], "}"}]}], ",", 
         RowBox[{"BoundaryStyle", "\[Rule]", 
          RowBox[{"{", 
           InterpretationBox[
            ButtonBox[
             TooltipBox[
              GraphicsBox[{
                {GrayLevel[0], RectangleBox[{0, 0}]}, 
                {GrayLevel[0], RectangleBox[{1, -1}]}, 
                {RGBColor[0.363898, 0.618501, 0.782349], 
                 RectangleBox[{0, -1}, {2, 1}]}},
               AspectRatio->1,
               DefaultBaseStyle->"ColorSwatchGraphics",
               Frame->True,
               FrameStyle->RGBColor[0.24259866666666668`, 0.412334, 0.521566],
               FrameTicks->None,
               
               ImageSize->
                Dynamic[{
                 Automatic, 
                  1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}],
               PlotRangePadding->None],
              StyleBox[
               RowBox[{"RGBColor", "[", 
                 RowBox[{"0.363898`", ",", "0.618501`", ",", "0.782349`"}], 
                 "]"}], NumberMarks -> False]],
             Appearance->None,
             BaseStyle->{},
             BaselinePosition->Baseline,
             ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
               If[
                Not[
                 AbsoluteCurrentValue["Deployed"]], 
                SelectionMove[Typeset`box$, All, Expression]; 
                FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                FrontEnd`Private`$ColorSelectorInitialColor = 
                 RGBColor[0.363898, 0.618501, 0.782349]; 
                FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                MathLink`CallFrontEnd[
                  FrontEnd`AttachCell[Typeset`box$, 
                   FrontEndResource["RGBColorValueSelector"], {
                   0, {Left, Bottom}}, {Left, Top}, 
                   "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]],
             DefaultBaseStyle->{},
             Evaluator->Automatic,
             Method->"Preemptive"],
            RGBColor[0.363898, 0.618501, 0.782349],
            Editable->False,
            Selectable->False], "}"}]}], ",", 
         RowBox[{"PlotPoints", "\[Rule]", " ", "100"}]}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"Export", "[", 
       RowBox[{
        RowBox[{"FileNameJoin", "[", 
         RowBox[{"{", 
          RowBox[{
          "\"\<.\>\"", ",", "\"\<Results\>\"", ",", "\"\<plots\>\"", ",", 
           RowBox[{"StringJoin", "[", 
            RowBox[{"benchmark", ",", "\"\<.pdf\>\""}], "]"}]}], "}"}], "]"}],
         ",", 
        RowBox[{"Show", "[", 
         RowBox[{
         "s1Plot", ",", "s2Plot", ",", "hPlot", ",", "hHomoPlot", ",", " ", 
          RowBox[{"FrameLabel", "\[Rule]", "xvarSet"}]}], "]"}]}], "]"}]}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.907304282175548*^9, 3.90730428453581*^9}, {
   3.907304332301869*^9, 3.907304383743732*^9}, {3.90730441777905*^9, 
   3.907304614915373*^9}, {3.907304818469648*^9, 3.907304855076015*^9}, {
   3.907304889952919*^9, 3.9073048935651817`*^9}, {3.9073052562758217`*^9, 
   3.9073052991767387`*^9}, {3.90730537727312*^9, 3.907305387833444*^9}, {
   3.9073057976179037`*^9, 3.90730585575885*^9}, {3.907305887032734*^9, 
   3.907305888065352*^9}, {3.907305934484674*^9, 3.9073059728800917`*^9}, {
   3.9073061026738377`*^9, 3.907306163356022*^9}, {3.90730619873659*^9, 
   3.907306203586775*^9}, {3.907306395961446*^9, 3.907306460420168*^9}, {
   3.9073065466191397`*^9, 3.907306577507361*^9}, {3.9073068625233994`*^9, 
   3.9073068715156116`*^9}, {3.9073071275557404`*^9, 3.90730713009651*^9}, {
   3.908935914085741*^9, 3.9089359321499863`*^9}, {3.9089401970681877`*^9, 
   3.908940230395905*^9}, {3.9089402856866627`*^9, 3.908940427173691*^9}, {
   3.9089405290373774`*^9, 3.908940661265287*^9}, {3.908940740568747*^9, 
   3.908940944880316*^9}, {3.90894100050498*^9, 3.9089411566317663`*^9}, {
   3.9089412005205183`*^9, 3.908941202163703*^9}, {3.90894338560145*^9, 
   3.9089437369482613`*^9}, {3.908943784507615*^9, 3.908944271388055*^9}, {
   3.908944316734522*^9, 3.908944319398243*^9}, {3.9089443819356117`*^9, 
   3.90894439479496*^9}, {3.908944501415676*^9, 3.9089445137881308`*^9}, {
   3.908944774446125*^9, 3.908944819018343*^9}, {3.9089455211061897`*^9, 
   3.9089455268705893`*^9}, {3.9089455663163013`*^9, 3.908945583870637*^9}, {
   3.911961370604163*^9, 3.911961378680274*^9}, {3.911961480997633*^9, 
   3.9119614841011963`*^9}, {3.911961581002421*^9, 3.911961618739142*^9}, {
   3.91196181560962*^9, 3.911961898209766*^9}, {3.911961979434463*^9, 
   3.911961993422756*^9}, {3.911962055731667*^9, 3.911962144894559*^9}, {
   3.911962190471842*^9, 3.911962224647677*^9}, {3.911962317605731*^9, 
   3.911962348256068*^9}, {3.911963005545004*^9, 3.911963044094515*^9}, {
   3.911963114148193*^9, 3.911963134506422*^9}, {3.91196537238614*^9, 
   3.911965380910098*^9}, {3.9119654455744534`*^9, 3.911965448935934*^9}, 
   3.911966346658243*^9, {3.911979750119223*^9, 3.911979752215795*^9}, {
   3.911979791037871*^9, 3.911979886672398*^9}, {3.912046932970421*^9, 
   3.912046947592596*^9}, {3.912047430787087*^9, 3.912047431322321*^9}, {
   3.91204751932131*^9, 3.912047522626005*^9}, {3.912050724784131*^9, 
   3.912050725127667*^9}, {3.912050867697175*^9, 3.912050883312018*^9}, {
   3.914290999091962*^9, 3.91429100289203*^9}, {3.9148814916586733`*^9, 
   3.91488151173779*^9}, {3.914881794563905*^9, 3.9148818127694693`*^9}, {
   3.914887932203808*^9, 3.914887941634383*^9}, {3.91488876899411*^9, 
   3.914888774887699*^9}, {3.915086843633951*^9, 3.9150869066840963`*^9}, {
   3.915086938202652*^9, 3.9150869401292057`*^9}, 3.9150871022875*^9, {
   3.915087151081543*^9, 3.915087237021615*^9}, {3.9150873120596437`*^9, 
   3.915087316288438*^9}, {3.915090928203846*^9, 3.91509092842549*^9}, {
   3.9150911308894033`*^9, 3.915091258905645*^9}, {3.915093114820485*^9, 
   3.9150932566746902`*^9}, 3.915093377244486*^9, {3.91509342253386*^9, 
   3.915093460121216*^9}, {3.915096058974251*^9, 3.915096065693925*^9}, {
   3.9151426814013853`*^9, 3.915142705094451*^9}, {3.915144805495585*^9, 
   3.915144809692739*^9}, {3.915151276252255*^9, 3.915151285454431*^9}, {
   3.915170333336605*^9, 3.91517033514895*^9}, {3.91517478810058*^9, 
   3.9151748172883387`*^9}, {3.915174950719688*^9, 3.9151750104381847`*^9}, {
   3.9151750674153233`*^9, 3.91517508552199*^9}, {3.915175267042222*^9, 
   3.9151753092563143`*^9}, {3.9152496503186502`*^9, 3.915249662232356*^9}, {
   3.915249766912426*^9, 3.91524977383883*^9}, {3.928044769139912*^9, 
   3.928044786352116*^9}, 3.928044855160407*^9, {3.9280552048503456`*^9, 
   3.928055233715351*^9}, {3.9280554188588343`*^9, 3.928055545867216*^9}, 
   3.92805561337259*^9, {3.9280556699092016`*^9, 3.9280557084975815`*^9}, {
   3.928055750458805*^9, 3.928055804193203*^9}, {3.928055929839531*^9, 
   3.9280559325620155`*^9}, 3.928055979547344*^9, {3.9280560246466618`*^9, 
   3.9280563305490074`*^9}, {3.928056371429364*^9, 3.9280563742165627`*^9}, {
   3.928056441394326*^9, 3.9280564943222756`*^9}, {3.92805694868285*^9, 
   3.928057050666236*^9}, {3.9280570945305805`*^9, 3.9280571128847895`*^9}, 
   3.9280571891646824`*^9},
 CellLabel->
  "In[353]:=",ExpressionUUID->"94401d5f-f06a-4530-80d8-9674a3344545"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Benchmarks", "Section",
 CellChangeTimes->{{3.902814463150034*^9, 
  3.9028144655349827`*^9}},ExpressionUUID->"409d4744-5306-43e8-9be9-\
83197a605c67"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"benchmarkname", " ", "=", " ", "\"\<ex2\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Benchmark:\>\"", ",", "benchmarkname"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"verifytimelimit", "=", "60"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"verification", " ", "time", " ", "limit"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"plot", " ", "=", "1"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"whether", " ", "to", " ", "plot", 
     RowBox[{"(", 
      RowBox[{"=", "1"}], ")"}], " ", "or", " ", "not", " ", 
     RowBox[{"(", 
      RowBox[{"=", "0"}], ")"}]}], ",", " ", 
    RowBox[{"better", " ", "choose", " ", "2", "D", " ", "examples"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"plotRange", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "}"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"range", " ", "for", " ", "plot"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"verifyResults", "[", 
   RowBox[{
   "benchmarkname", ",", "plot", ",", "plotRange", ",", "verifytimelimit"}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.90676166894821*^9, 3.9067617028774347`*^9}, {
   3.906777233628582*^9, 3.906777235220318*^9}, {3.906777300826878*^9, 
   3.906777300974584*^9}, {3.906777381011181*^9, 3.906777387013563*^9}, {
   3.906777473150066*^9, 3.9067775191342783`*^9}, {3.906777692103805*^9, 
   3.9067777184828053`*^9}, 3.906777825843491*^9, {3.906777924224366*^9, 
   3.906777925401373*^9}, 3.906778231986315*^9, 3.906778296271446*^9, {
   3.906778382680922*^9, 3.906778386268668*^9}, {3.906778443510886*^9, 
   3.9067785193092823`*^9}, {3.906778570582307*^9, 3.906778574673794*^9}, {
   3.906778796837179*^9, 3.906778796965035*^9}, {3.906779100401245*^9, 
   3.906779100540617*^9}, {3.9067791837418737`*^9, 3.9067791839205723`*^9}, {
   3.906779216700273*^9, 3.90677921924601*^9}, {3.9067800572162943`*^9, 
   3.906780059498364*^9}, {3.906781608135755*^9, 3.906781610858183*^9}, {
   3.907131529024609*^9, 3.907131529841262*^9}, {3.907131780019555*^9, 
   3.9071318079770107`*^9}, {3.907132428342876*^9, 3.907132428462611*^9}, {
   3.907132464068362*^9, 3.907132464211719*^9}, {3.90713264795321*^9, 
   3.907132659073024*^9}, {3.907132882758555*^9, 3.907132882912462*^9}, {
   3.907133038679142*^9, 3.907133070993863*^9}, {3.9071331131273823`*^9, 
   3.9071331149138107`*^9}, {3.9071331463022003`*^9, 3.907133146437608*^9}, {
   3.907133326229497*^9, 3.907133326335067*^9}, {3.907133406535421*^9, 
   3.907133435878783*^9}, {3.9071334967533817`*^9, 3.907133496900138*^9}, {
   3.9071335757991858`*^9, 3.907133575958622*^9}, {3.907133606209375*^9, 
   3.9071336361891613`*^9}, {3.907133679524406*^9, 3.907133679626871*^9}, {
   3.9071337372236137`*^9, 3.907133739555475*^9}, {3.907133771050124*^9, 
   3.90713377121069*^9}, {3.9071338210727167`*^9, 3.907133821189383*^9}, {
   3.907133894791542*^9, 3.9071339113545637`*^9}, {3.9071339543301992`*^9, 
   3.90713395444212*^9}, {3.907134114377513*^9, 3.907134117597447*^9}, {
   3.907135107309143*^9, 3.907135109261382*^9}, {3.907135556195319*^9, 
   3.9071355563313293`*^9}, {3.9071356403519573`*^9, 
   3.9071356451462307`*^9}, {3.907136407563705*^9, 3.9071364077571*^9}, {
   3.907136460459866*^9, 3.9071364612070227`*^9}, {3.907136519322567*^9, 
   3.907136544301717*^9}, {3.9071367096510143`*^9, 3.907136710820771*^9}, {
   3.9071368190747223`*^9, 3.907136845496209*^9}, {3.90713694939797*^9, 
   3.907136949572154*^9}, {3.907137542471789*^9, 3.9071375432633867`*^9}, {
   3.9071376014925413`*^9, 3.90713760161096*^9}, {3.9071376460728617`*^9, 
   3.9071376462190857`*^9}, {3.90713795440694*^9, 3.907137989876782*^9}, {
   3.907138050199011*^9, 3.907138052300894*^9}, {3.907191271867024*^9, 
   3.9071912774269657`*^9}, {3.9071913690255537`*^9, 3.907191369095195*^9}, {
   3.9071916325689487`*^9, 3.907191635112226*^9}, {3.907191712957747*^9, 
   3.9071917438612833`*^9}, {3.907191846634391*^9, 3.907191848076249*^9}, {
   3.907192208318328*^9, 3.907192208556365*^9}, {3.907192741739048*^9, 
   3.907192743229129*^9}, {3.907193165024198*^9, 3.907193166449535*^9}, {
   3.907193532442279*^9, 3.907193532553523*^9}, {3.907200612037795*^9, 
   3.907200613072439*^9}, {3.907201247234679*^9, 3.907201247489032*^9}, {
   3.9072024824121513`*^9, 3.9072024862108507`*^9}, {3.907203023015129*^9, 
   3.90720303883788*^9}, 3.9073047033667917`*^9, {3.9073049585739202`*^9, 
   3.907305014945451*^9}, {3.907305049566552*^9, 3.9073051644194317`*^9}, {
   3.9073052311394987`*^9, 3.907305236150836*^9}, {3.90730540505897*^9, 
   3.907305405866967*^9}, {3.907306586341394*^9, 3.907306605112817*^9}, {
   3.908940057350588*^9, 3.9089401695082817`*^9}, {3.908944245868732*^9, 
   3.908944246877791*^9}, {3.908944440697832*^9, 3.9089444590704*^9}, 
   3.908944522890889*^9, {3.908945333699782*^9, 3.908945341677265*^9}, 
   3.90894577830933*^9, {3.908945871663412*^9, 3.90894590628572*^9}, 
   3.9119613491090508`*^9, {3.911961500265422*^9, 3.911961540515401*^9}, {
   3.911963053610394*^9, 3.911963055448969*^9}, {3.9119631397358437`*^9, 
   3.911963143671258*^9}, {3.911968179543517*^9, 3.9119681829465303`*^9}, {
   3.911979975876609*^9, 3.9119799787629433`*^9}, {3.912046756792756*^9, 
   3.912046772900489*^9}, {3.912047750049457*^9, 3.9120477712314873`*^9}, {
   3.912048225204517*^9, 3.912048225326563*^9}, {3.914192982006378*^9, 
   3.9141930186680727`*^9}, {3.9141931214802513`*^9, 3.914193124444788*^9}, {
   3.914193155973735*^9, 3.914193156087986*^9}, {3.91419335565914*^9, 
   3.914193355744419*^9}, {3.9141934913533497`*^9, 3.914193491485497*^9}, {
   3.9141935620196133`*^9, 3.914193562124544*^9}, {3.914193673387321*^9, 
   3.9141936960025187`*^9}, {3.914193769780534*^9, 3.914193770009935*^9}, {
   3.914197961529594*^9, 3.914198020944298*^9}, {3.914198067820488*^9, 
   3.914198067963183*^9}, {3.9142893490608807`*^9, 3.9142893494536867`*^9}, {
   3.914881458480019*^9, 3.9148814661164*^9}, {3.914911331561838*^9, 
   3.914911345440011*^9}, {3.914911553101884*^9, 3.91491155348967*^9}, {
   3.914911604700604*^9, 3.914911604918004*^9}, {3.9149119000281687`*^9, 
   3.9149119503505163`*^9}, {3.9149119990093184`*^9, 
   3.9149119991367807`*^9}, {3.914912266830894*^9, 3.91491226714675*^9}, {
   3.914912462842103*^9, 3.9149124629486723`*^9}, {3.914912612924026*^9, 
   3.914912617994013*^9}, {3.9149127631445007`*^9, 3.9149127662803497`*^9}, {
   3.914912889358178*^9, 3.914912889490679*^9}, {3.914913031422687*^9, 
   3.914913044695199*^9}, {3.914913212863093*^9, 3.914913222431107*^9}, {
   3.914917771119822*^9, 3.914917771227647*^9}, {3.9149185687996264`*^9, 
   3.9149185737623377`*^9}, {3.915087362383148*^9, 3.915087362638653*^9}, {
   3.915087854833661*^9, 3.915087854982781*^9}, 3.915087975348093*^9, {
   3.915088119231093*^9, 3.9150881229546223`*^9}, {3.91508836669668*^9, 
   3.91508836677761*^9}, {3.915088507270318*^9, 3.9150885207572947`*^9}, {
   3.915090117667275*^9, 3.9150901185830517`*^9}, {3.915090441203534*^9, 
   3.915090441307644*^9}, {3.9150907317610826`*^9, 3.9150907318719063`*^9}, {
   3.915090895446926*^9, 3.915090895721902*^9}, {3.915091517162334*^9, 
   3.9150915175300913`*^9}, 3.9150915615961103`*^9, {3.9150916465340548`*^9, 
   3.915091646616383*^9}, {3.9150917356467524`*^9, 3.9150917368202057`*^9}, {
   3.915091814748888*^9, 3.915091816302051*^9}, {3.91509236809182*^9, 
   3.915092368335546*^9}, {3.9150924046804667`*^9, 3.915092404798233*^9}, 
   3.91509244672255*^9, {3.91509281360946*^9, 3.915092813694293*^9}, {
   3.9150932610768538`*^9, 3.915093261950616*^9}, {3.915094052435038*^9, 
   3.915094053130021*^9}, {3.915094106619349*^9, 3.915094110446541*^9}, {
   3.915142638800671*^9, 3.915142639086643*^9}, {3.9151427247239437`*^9, 
   3.915142768724436*^9}, {3.915151475009741*^9, 3.915151475069322*^9}, {
   3.915154731711587*^9, 3.915154741117442*^9}, {3.91516846811086*^9, 
   3.915168468272502*^9}, {3.9151691513909893`*^9, 3.9151691515254173`*^9}, {
   3.915169757737974*^9, 3.915169757877564*^9}, {3.9151699818152*^9, 
   3.915169981878644*^9}, {3.915174868671637*^9, 3.915174899808065*^9}, {
   3.91517512413186*^9, 3.9151751286400537`*^9}, {3.9151751699204607`*^9, 
   3.915175241755439*^9}, 3.9152397024470577`*^9, {3.915239800144024*^9, 
   3.9152398002522593`*^9}, {3.915240009352495*^9, 3.915240021209074*^9}, {
   3.91524005486474*^9, 3.915240054972728*^9}, {3.915240106381936*^9, 
   3.915240152687016*^9}, {3.915240251731538*^9, 3.915240251848157*^9}, {
   3.9152403240542*^9, 3.9152403241876307`*^9}, {3.9152411824866323`*^9, 
   3.915241185847383*^9}, {3.915241218882709*^9, 3.915241218965276*^9}, {
   3.915246878602894*^9, 3.9152468786917753`*^9}, {3.915246978131325*^9, 
   3.9152469787619762`*^9}, {3.915247070743989*^9, 3.915247118028302*^9}, {
   3.9152496152924*^9, 3.915249617800469*^9}, {3.9152497020794086`*^9, 
   3.915249702185359*^9}, {3.9152497610963287`*^9, 3.915249761530422*^9}, {
   3.9280448519264545`*^9, 3.928044852030435*^9}, 
   3.928057306623983*^9},ExpressionUUID->"fb58e6ab-97e8-48fe-b147-\
58817a997b11"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"benchmarkname", " ", "=", " ", "\"\<ex3\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Benchmark:\>\"", ",", "benchmarkname"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"verifytimelimit", "=", "60"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"verification", " ", "time", " ", "limit"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"plot", " ", "=", "1"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"whether", " ", "to", " ", "plot", 
     RowBox[{"(", 
      RowBox[{"=", "1"}], ")"}], " ", "or", " ", "not", " ", 
     RowBox[{"(", 
      RowBox[{"=", "0"}], ")"}]}], ",", " ", 
    RowBox[{"better", " ", "choose", " ", "2", "D", " ", "examples"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"plotRange", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "}"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"range", " ", "for", " ", "plot"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"verifyResults", "[", 
   RowBox[{
   "benchmarkname", ",", "plot", ",", "plotRange", ",", "verifytimelimit"}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9280571491932387`*^9, 3.9280571493135176`*^9}, {
  3.9280573045270977`*^9, 
  3.9280573046552973`*^9}},ExpressionUUID->"21ba19d3-32a7-4f68-b2af-\
db15f99837c6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"benchmarkname", " ", "=", " ", "\"\<ex4\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Print", "[", 
   RowBox[{"\"\<Benchmark:\>\"", ",", "benchmarkname"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"verifytimelimit", "=", "60"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"verification", " ", "time", " ", "limit"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"plot", " ", "=", "1"}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"whether", " ", "to", " ", "plot", 
     RowBox[{"(", 
      RowBox[{"=", "1"}], ")"}], " ", "or", " ", "not", " ", 
     RowBox[{"(", 
      RowBox[{"=", "0"}], ")"}]}], ",", " ", 
    RowBox[{"better", " ", "choose", " ", "2", "D", " ", "examples"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"plotRange", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7"}], ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7"}], ",", "7"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"-", "7"}], ",", "7"}], "}"}]}], "}"}]}], ";", " ", 
  RowBox[{"(*", 
   RowBox[{"range", " ", "for", " ", "plot"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"verifyResults", "[", 
   RowBox[{
   "benchmarkname", ",", "plot", ",", "plotRange", ",", "verifytimelimit"}], 
   "]"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9280572208585415`*^9, 3.928057220970627*^9}, {
  3.928057256256226*^9, 3.9280573020867877`*^9}, {3.9280591461268005`*^9, 
  3.928059151495996*^9}},ExpressionUUID->"50efca42-1d0b-4a99-b77e-\
c899912162f5"]
}, Open  ]]
},
WindowSize->{851, 967},
WindowMargins->{{Automatic, -6}, {Automatic, 0}},
Magnification:>0.9 Inherited,
FrontEndVersion->"12.0 for Microsoft Windows (64-bit) (April 8, 2019)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 232, 4, 60, "Section",ExpressionUUID->"4b336cb7-3538-4769-b1b1-618427d80119"],
Cell[657, 21, 68323, 1571, 3141, "Input",ExpressionUUID->"94401d5f-f06a-4530-80d8-9674a3344545"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69017, 1597, 157, 3, 60, "Section",ExpressionUUID->"409d4744-5306-43e8-9be9-83197a605c67"],
Cell[69177, 1602, 9247, 146, 117, "Input",ExpressionUUID->"fb58e6ab-97e8-48fe-b147-58817a997b11"],
Cell[78427, 1750, 1486, 41, 117, "Input",ExpressionUUID->"21ba19d3-32a7-4f68-b2af-db15f99837c6"],
Cell[79916, 1793, 1616, 44, 117, "Input",ExpressionUUID->"50efca42-1d0b-4a99-b77e-c899912162f5"]
}, Open  ]]
}
]
*)

